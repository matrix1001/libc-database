#!/bin/bash
cd "$(dirname "$0")"
die() {
  echo >&2 $1
  exit 1
}
function usage() {
  echo >&2 "Usage: $0 id [id ...]"
  exit 2
}

function download_single() {
  local id=$1
  echo "Getting $id"
  if [ -d libs/$id ]; then
    echo "  --> Downloaded before. Remove it to download again."
    return
  fi

  local url=`cat db/$1.url 2>/dev/null|| die "-> Invalid id"`
  echo "  -> Location: $url"
  local tmp=`mktemp -d || mktemp -d -t "libc-database" || die "Cannot get temp dir"`
  echo "  -> Downloading package"
  wget $url 2>/dev/null -O $tmp/pkg.deb || die "Failed to download package from $url"
  echo "  -> Extracting package"

  pushd $tmp 1>/dev/null
  ar x pkg.deb || die "ar failed"
  tar xf data.tar.* || die "tar failed"
  popd 1>/dev/null

  mkdir libs/$id
  cp $tmp/lib/*/* libs/$id 2>/dev/null || cp $tmp/lib32/* libs/$id 2>/dev/null \
    || die "Failed to save. Check it manually $tmp"
  echo "  -> Package saved to libs/$id"

  rm -rf $tmp
}

function download() {
  [[ $# < 1 ]] && usage
  id=$1; shift
  if [[ $# == 0 ]]; then
    download_single $id
  else
    comm -12 \
      <(download_single $id) \
      <(download "$@")
  fi
}

download "$@"

